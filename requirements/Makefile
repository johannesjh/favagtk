# Makefile for managing favagtk's requirements

PLATFORM=org.gnome.Platform//42
SDK=org.gnome.Sdk//42

.PHONY: python3-gnome-platform.in
python3-gnome-platform.in:
	# This target generates a list of python packages that come pre-installed on org.gnome.Platform.
	# Input: A script is run inside org.gnome.Platform which lists all python packages.
	# Output: The target writes the list of packages to a "python3-gnome-platform.in" file.
	echo "# This file was auto-generated by running make $@" > python3-gnome-platform.in
	echo "# The file lists python packages that ship with ${PLATFORM}" >> python3-gnome-platform.in
	flatpak run --user ${PLATFORM} -c "python3 -c \"import pkg_resources; print(\\\"\\\\n\\\".join([f\\\"{p.key} == {p.version}\\\" for p in pkg_resources.working_set if p.key != \\\"setuptools\\\"]))\"" >> python3-gnome-platform.in
	echo "lxml==4.8.0" >> python3-gnome-platform.in


.PHONY: pip-compile
pip-compile:
	# This target updates and freezes python dependencies using pip-compile-multi.
	# Input: This target reads dependency definitions from *.in files
	# Output: The target freezes transitive dependencies and write them to *.txt files
	pip-compile python3-gnome-platform.in > python3-gnome-platform.txt
	pip-compile --verbose python3-scikit-learn.in > python3-scikit-learn.txt
	pip-compile python3-main.in > python3-main.txt
	pip-compile python3-optional.in > python3-optional.txt
	#
	# to avoid inter-dependent requirement files,
	# remove all lines starting with -c or -r in requirement txt files:
	sed -i '/^-/d' *.txt


.PHONY: python3-main.json
python3-main.json:
	# This script generates a flatpak build module definition for main python dependencies.
	# Input: The target reads python dependencies from python3-main.txt
	# Output: The target generates a flatpak build module "python3-main.json"
	./flatpak-pip-generator --runtime ${SDK} -r python3-main.txt -o python3-main
	- pre-commit run --files python3-main.json > /dev/null


.PHONY: python3-optional.json
python3-optional.json:
	# This script generate a flatpak build module definition for optional python dependencies.
	# Input: The target reads python dependencies from *.txt files.
	# Output: The target generates a flatpak build module "python3-optional.json"
	#
	# 1) we first generate a list of dependencies to include in the flatpak module
	echo "# This file was auto-generated by running make $@" > python3-optional.include.txt
	echo "# The file lists favagtk's additional requirements, excluding platform packages and scikit-learn." >> python3-optional.include.txt
	echo "# This is a temporary file and does not need to be kept under version control." >> python3-optional.include.txt
	grep --invert-match -E '^#' ./python3-optional.txt >> python3-optional.include.txt
	#
	# 2) we then generate a list of dependencies to exclude from the flatpak module;
	# these are dependencies that shall be installed by a different module or that come pre-installed as part of the platform.
	echo "# This file was auto-generated by running make $@" > python3-optional.exclude.txt
	echo "# The file lists favagtk dependencies to exclude," >> python3-optional.exclude.txt
	echo "#   either because they come pre-installed with ${PLATFORM}," >> python3-optional.exclude.txt
	echo "#   or because we install them separately, such as scikit-learn." >> python3-optional.exclude.txt
	echo "# This is a temporary file and does not need to be kept under version control." >> python3-optional.exclude.txt
	grep --no-filename --only-matching -E '^[^-# ][^=~> ]*' ./python3-gnome-platform.txt ./python3-scikit-learn.txt >> python3-optional.exclude.txt
	#
	# 3) we finally generate the flatpak build module
	./flatpak-pip-generator --runtime ${SDK} -r python3-optional.include.txt -e $(shell grep --invert-match -E '^#' < python3-optional.exclude.txt) -o python3-optional
	sed -i -e "1i /* This file was auto-generated by running make $@. It defines a flatpak build module to install favagtk's optional python dependencies. */" python3-optional.json
	- pre-commit run --files python3-optional.json > /dev/null

